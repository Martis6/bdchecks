DC_validation_taxon_empty:
  name: validation_taxon_empty
  meta:
    information:
      description: Check if at least one field needed to determine the taxon of the entity exists and is not empty.
      question: Is taxon information present?
      darwin_core_class: taxon
      data_quality_dimension: completeness
      dimension: name
      output: validation
      severity:
      warning: incomplete
      resolution:
        record: single_record
        term: multi_term
      keywords: taxon,validation,completness,missing,incomplete
      guid: 06851339-843f-4a43-8422-4e61b9a00e75
    example:
      pass: The value for at least one term in the Taxon class is present.
      fail: The value for all terms organized in the Taxon class are NULL.
      input_pass: kingdom=animal
      input_fail: kingdom=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/105
      reference:
      creator: Lee Belbin
      creation: 
      maintainer: Povilas Gibas
      modification: 2019-08-14
    notes:
      1: Lee Belbin - This needs discussion. For example, would kingdom, phylum, class or order only be useful?
      2: JW - Would this test return true if there were data in the relevant Taxon-related fields was meaningless (effectively null)?
  input:
    target: taxonID,scientificNameID,acceptedNameUsageID,parentNameUsageID,originalNameUsageID,taxonConceptID,scientificName,higherClassification,kingdom,phylum,class,order,family,genus,subgenus,specificEpithet,infraspecificEpithet,vernacularName
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing:
    merge_targets: TRUE
DC_validation_taxonid_empty:
  name: validation_taxonid_empty
  meta:
    information:
      description: Check if taxonID exists and is not empty.
      question: Is taxonID information present?
      darwin_core_class: taxon
      data_quality_dimension: completeness
      dimension: name
      output: validation
      severity:
      warning: incomplete
      resolution:
        record: single_record
        term:
      keywords: taxon,validation,completness,missing,incomplete
      guid: 401bf207-9a55-4dff-88a5-abcd58ad97fa
    example:
      pass: The value for taxonID is present.
      fail: The value for taxonID is missing.
      input_pass: taxonID=101010
      input_fail: taxonID=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/120
      reference:
      creator:
      creation:
      maintainer: Povilas Gibas
      modification: 2019-08-14
    notes:
  input:
    target: taxonID
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing: internal_prerequisites_not_met
    merge_targets: FALSE
DC_validation_taxonrank_empty:
  name: validation_taxonrank_empty
  meta:
    information:
      description: Check if taxonRank exists and is not empty.
      question: Is taxonRank information present?
      darwin_core_class: taxon
      data_quality_dimension: completeness
      dimension: name
      output: validation
      severity:
      warning: incomplete
      resolution:
        record: single_record
        term:
      keywords: taxon,validation,completness,missing,incomplete
      guid: 14da5b87-8304-4b2b-911d-117e3c29e890
    example:
      pass: The value for taxonRank is present.
      fail: The value for taxonRank is missing.
      input_pass: taxonRank=genus
      input_fail: taxonRank=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/161
      reference: https://terms.tdwg.org/wiki/dwc:taxonRank
      creator: TDWG2018
      creation:
      maintainer: Povilas Gibas
      modification: 2019-08-14
    notes:
  input:
    target: taxonRank
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing:
    merge_targets: FALSE
DC_validation_taxonrank_notstandard:
  name: validation_taxonrank_notstandard
  meta:
    information:
      description: Check if taxonRank is standard.
      question: Is taxonRank information standard?
      darwin_core_class: taxon
      data_quality_dimension: conformance
      dimension: name
      output: validation
      severity:
      warning: invalid
      resolution:
        record: single_record
        term:
      keywords: taxon,validation,completness,missing,incomplete
      guid: 7bdb13a4-8a51-4ee5-be7f-20693fdb183e
    example:
      pass: The value for taxonRank is standard.
      fail: The value for taxonRank is missing or not standard.
      input_pass: taxonRank=domain
      input_fail: taxonRank=realm
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/162
      reference: http://rs.gbif.org/vocabulary/gbif/rank.xml
      creator: TDWG2018
      creation:
      maintainer: Povilas Gibas
      modification: 2019-08-14
    notes:
      1: PG - External data was downloaded as is provided within package.
  input:
    target: taxonRank
    dependency:
      dependency_type: external
      data_checks:
      rpackages:
      data: data_taxonrank
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing: internal_prerequisites_not_met
    merge_targets: FALSE
DC_validation_scientificname_empty:
  name: validation_scientificname_empty
  meta:
    information:
      description: Check if scientificName exists and is not empty.
      question: Is scientificName information present?
      darwin_core_class: taxon
      data_quality_dimension: completeness
      dimension: name
      output: validation
      severity:
      warning: incomplete
      resolution:
        record: single_record
        term:
      keywords: taxon,validation,completness,missing,incomplete
      guid: 7c4b9498-a8d9-4ebb-85f1-9f200c788595
    example:
      pass: The value for scientificName is present.
      fail: The value for scientificName is missing.
      input_pass: scientificName=banana
      input_fail: scientificName=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/82
      reference: ALA,GBIF,OBIS
      creator: 
      creation:
      maintainer: Povilas Gibas
      modification: 2019-08-27
    notes:
      1: Paula Zermoglio - The specification here is tricky. It might perfectly be that sciName is empty and that genus and specificEp are filled in. As it stands, it could only run AFTER sciName has been inferred from genus+spEp.
      2: Paul Morris - Name needs to change. Unavailable means something other than not supplied to taxonomists.. dwc:taxonId should be included, it also specifies the name
      3: Paul Morris - Name, definitions, and specification are inconsistent. It isn;t clear if this is a measure of multiple terms or a test for conformance against a vocabulary.
  input:
    target: scientificName
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing:
    merge_targets: FALSE
DC_validation_kingdom_notfound:
  name: validation_kingdom_notfound
  meta:
    information:
      description: Check if kingdom was found as a value at the rank of kingdom by the specified source authority service.
      question: Is kingdom information present?
      darwin_core_class: taxon
      data_quality_dimension: conformance
      dimension: name
      output: validation
      severity:
      warning: invalid
      resolution:
        record: single_record
        term:
      keywords: taxon,validation
      guid: 125b5493-052d-4a0d-a3e1-ed5bf792689e
    example:
      pass: The value for kingdom is present and correct.
      fail: The value for kingdom is missing or incorrect.
      input_pass: kingdom=Animalia
      input_fail: phylum=birds
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      TARGET %in% reference
    source:
      resource: https://github.com/tdwg/bdq/issues/81
      reference: GBIF
      creator: 
      creation:
      maintainer: Povilas Gibas
      modification: 2019-08-27
    notes:
      1: The purpose of this test is to check whether the value is a name that is a result of a nomenclatural act at this rank. This excludes unpublished names, misspellings and vernacular names. It is expected that the test will designate the source authority against to check. The same test might return distinct results when using distinct source authorities.
  input:
    target: kingdom
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing: internal_prerequisites_not_met
    merge_targets: FALSE
DC_validation_phylum_notfound:
  name: validation_phylum_notfound
  meta:
    information:
      description: Check if phylum was found as a value at the rank of phylum by the specified source authority service.
      question: Is phylum information present?
      darwin_core_class: taxon
      data_quality_dimension: conformance
      dimension: name
      output: validation
      severity:
      warning: invalid
      resolution:
        record: single_record
        term:
      keywords: taxon,validation
      guid: eaad41c5-1d46-4917-a08b-4fd1d7ff5c0f
    example:
      pass: The value for phylum is present and correct.
      fail: The value for phylum is missing or incorrect.
      input_pass: phylum=Chordate
      input_fail: phylum=birds
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      TARGET %in% reference
    source:
      resource: https://github.com/tdwg/bdq/issues/22
      reference: iDigBio
      creator: 
      creation:
      maintainer: Povilas Gibas
      modification: 2019-08-27
    notes:
      1: The purpose of this test is to check whether the value is a name that is a result of a nomenclatural act at this rank. This excludes unpublished names, misspellings and vernacular names. It is expected that the test will designate the source authority against to check. The same test might return distinct results when using distinct source authorities.
  input:
    target: phylum
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing: internal_prerequisites_not_met
    merge_targets: FALSE
DC_validation_class_notfound:
  name: validation_class_notfound
  meta:
    information:
      description: Check if class was found as a value at the rank of class by the specified source authority service.
      question: Is class information present?
      darwin_core_class: taxon
      data_quality_dimension: conformance
      dimension: name
      output: validation
      severity:
      warning: invalid
      resolution:
        record: single_record
        term:
      keywords: taxon,validation
      guid: 2cd6884e-3d14-4476-94f7-1191cfff309b
    example:
      pass: The value for class is present and correct.
      fail: The value for class is missing or incorrect.
      input_pass: class=Herps
      input_fail: class=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      TARGET %in% reference
    source:
      resource: https://github.com/tdwg/bdq/issues/77
      reference:
      creator: 
      creation:
      maintainer: Povilas Gibas
      modification: 2019-08-27
    notes:
      1: The purpose of this test is to check whether the value is a name that is a result of a nomenclatural act at this rank. This excludes unpublished names, misspellings and vernacular names. It is expected that the test will designate the source authority against to check. The same test might return distinct results when using distinct source authorities.
  input:
    target: class
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing: internal_prerequisites_not_met
    merge_targets: FALSE
DC_validation_order_notfound:
  name: validation_order_notfound
  meta:
    information:
      description: Check if order was found as a value at the rank of order by the specified source authority service.
      question: Is order information present?
      darwin_core_class: taxon
      data_quality_dimension: conformance
      dimension: name
      output: validation
      severity:
      warning: invalid
      resolution:
        record: single_record
        term:
      keywords: taxon,validation
      guid: 81cc974d-43cc-4c0f-a5e0-afa23b455aa3
    example:
      pass: The value for order is present and correct.
      fail: The value for order is missing or incorrect.
      input_pass: order=Crocodilia
      input_fail: order=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      TARGET %in% reference
    source:
      resource: https://github.com/tdwg/bdq/issues/83
      reference: iDigBio
      creator: 
      creation:
      maintainer: Povilas Gibas
      modification: 2019-08-27
    notes:
      1: The purpose of this test is to check whether the value is a name that is a result of a nomenclatural act at this rank. This excludes unpublished names, misspellings and vernacular names. It is expected that the test will designate the source authority against to check. The same test might return distinct results when using distinct source authorities.
  input:
    target: order
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing: internal_prerequisites_not_met
    merge_targets: FALSE
DC_validation_family_notfound:
  name: validation_family_notfound
  meta:
    information:
      description: Check if family was found as a value at the rank of family by the specified source authority service.
      question: Is family information present?
      darwin_core_class: taxon
      data_quality_dimension: conformance
      dimension: name
      output: validation
      severity:
      warning: invalid
      resolution:
        record: single_record
        term:
      keywords: taxon,validation
      guid: 3667556d-d8f5-454c-922b-af8af38f613c
    example:
      pass: The value for family is present and correct.
      fail: The value for family is missing or incorrect.
      input_pass: family=Felidae
      input_fail: family=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      TARGET %in% reference
    source:
      resource: https://github.com/tdwg/bdq/issues/28
      reference: iDigBio
      creator: 
      creation:
      maintainer: Povilas Gibas
      modification: 2019-08-27
    notes:
      1: The purpose of this test is to check whether the value is a name that is a result of a nomenclatural act at this rank. This excludes unpublished names, misspellings and vernacular names. It is expected that the test will designate the source authority against to check. The same test might return distinct results when using distinct source authorities.
  input:
    target: family
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing: internal_prerequisites_not_met
    merge_targets: FALSE
DC_validation_genus_notfound:
  name: validation_genus_notfound
  meta:
    information:
      description: Check if genus was found as a value at the rank of genus by the specified source authority service.
      question: Is genus information present?
      darwin_core_class: taxon
      data_quality_dimension: conformance
      dimension: name
      output: validation
      severity:
      warning: invalid
      resolution:
        record: single_record
        term:
      keywords: taxon,validation
      guid: 3667556d-d8f5-454c-922b-af8af38f613c
    example:
      pass: The value for genus is present and correct.
      fail: The value for genus is missing or incorrect.
      input_pass: genus=Canis
      input_fail: genus=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      TARGET %in% reference
    source:
      resource: https://github.com/tdwg/bdq/issues/122
      reference: iDigBio
      creator: 
      creation:
      maintainer: Povilas Gibas
      modification: 2019-08-27
    notes:
      1: The purpose of this test is to check whether the value is a name that is a result of a nomenclatural act at this rank. This excludes unpublished names, misspellings and vernacular names. It is expected that the test will designate the source authority against to check. The same test might return distinct results when using distinct source authorities.
  input:
    target: genus
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing: internal_prerequisites_not_met
    merge_targets: FALSE
DC_validation_location_empty:
  name: validation_location_empty
  meta:
    information:
      description: Check if at least one field needed to determine location of the entity exists and is not empty.
      question: Is location information present?
      darwin_core_class: location
      data_quality_dimension: completeness
      dimension: space
      output: validation
      severity:
      warning: incomplete
      resolution:
        record: single_record
        term: multi_term
      keywords: location,validation,completness,missing,incomplete
      guid: 58486cb6-1114-4a8a-ba1e-bd89cfe887e9
    example:
      pass: The value for at least one term for location is present.
      fail: The value for all terms organized for location are NULL.
      input_pass: countryCode=AU
      input_fail: countryCode=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/40
      reference:
      creator: Lee Belbin
      creation: 
      maintainer: Povilas Gibas
      modification: 2019-10-01
    notes:
      1: Paula Zermoglio - I believe DwC terms should include some more, e.g., island, islandGroup, waterbody, county, municipality, continent, countryCode.
      2: Arthur Chapman - This is a complicated test - needs more work to document. Not georeferenced or not georeferenceable.. Need to add many dwc:terms. If all relevant spatial terms are blank or uninterpretable.
      3: Paul J. Morris - Extensive discussion in the meeting - has georeference or is georeferencable is one possible interpretation, but a very complex one to implement, and supported by other more granular tests. We decided to constrain this test to a simple test of minimal presence of some sort of spatial data.
  input:
    target: country, countryCode, county, decimalLatitude, decimalLongitude, footprintWKT, higherGeography, higherGeographyID, island, islandGroup, locality, locationID, municipality, stateProvince, verbatimCoordinates, verbatimLatitude, verbatimLocality, verbatimLongitude, waterBody
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing:
    merge_targets: TRUE
DC_validation_decimallatitude_empty:
  name: validation_decimallatitude_empty
  meta:
    information:
      description: Check if decimalLatitude exists and is not empty.
      question: Is decimalLatitude information present?
      darwin_core_class: location
      data_quality_dimension: completeness
      dimension: space
      output: validation
      severity:
      warning: incomplete
      resolution:
        record: single_record
      keywords: location,validation,completness,missing,incomplete
      guid: 7d2485d5-1ba7-4f25-90cb-f4480ff1a275
    example:
      pass: The value for decimalLatitude is present.
      fail: The value for decimalLatitude is missing.
      input_pass: decimalLatitude=-41.0983423
      input_fail: decimalLatitude=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/119
      reference:
      creator:
      creation:
      maintainer: Povilas Gibas
      modification: 2019-10-01
    notes:
  input:
    target: decimalLatitude
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing:
    merge_targets: FALSE
DC_validation_decimallongitude_empty:
  name: validation_decimallongitude_empty
  meta:
    information:
      description: Check if decimalLongitude exists and is not empty.
      question: Is decimalLongitude information present?
      darwin_core_class: location
      data_quality_dimension: completeness
      dimension: space
      output: validation
      severity:
      warning: incomplete
      resolution:
        record: single_record
      keywords: location,validation,completness,missing,incomplete
      guid: 9beb9442-d942-4f42-8b6a-fcea01ee086a
    example:
      pass: The value for decimalLongitude is present.
      fail: The value for decimalLongitude is missing.
      input_pass: decimalLongitude=-41.0983423
      input_fail: decimalLongitude=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/96
      reference:
      creator:
      creation:
      maintainer: Povilas Gibas
      modification: 2019-10-01
    notes:
  input:
    target: decimalLongitude
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing:
    merge_targets: FALSE
DC_validation_geodeticdatum_empty:
  name: validation_geodeticdatum_empty
  meta:
    information:
      description: Check if geodeticDatum exists and is not empty.
      question: Is geodeticDatum information present?
      darwin_core_class: location
      data_quality_dimension: completeness
      dimension: space
      output: validation
      severity:
      warning: incomplete
      resolution:
        record: single_record
      keywords: location,validation,completness,missing,incomplete
      guid: 239ec40e-a729-4a8e-ba69-e0bf03ac1c44
    example:
      pass: The value for geodeticDatum is present.
      fail: The value for geodeticDatum is missing.
      input_pass: geodeticDatum=WGS84
      input_fail: geodeticDatum=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/78
      reference:
      creator:
      creation:
      maintainer: Povilas Gibas
      modification: 2019-10-01
    notes:
  input:
    target: geodeticDatum
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing:
    merge_targets: FALSE
DC_validation_country_empty:
  name: validation_country_empty
  meta:
    information:
      description: Check if country exists and is not empty.
      question: Is country information present?
      darwin_core_class: location
      data_quality_dimension: completeness
      dimension: space
      output: validation
      severity:
      warning: incomplete
      resolution:
        record: single_record
      keywords: location,validation,completness,missing,incomplete
      guid: 6ce2b2b4-6afe-4d13-82a0-390d31ade01c
    example:
      pass: The value for country is present.
      fail: The value for country is missing.
      input_pass: country=Australia
      input_fail: country=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/42
      reference:
      creator:
      creation:
      maintainer: Povilas Gibas
      modification: 2019-10-01
    notes:
      1: John Wieczorek - Agreed at TDWG 2018 DQIG meeting that the original assessment of the core nature of the test was correct based on consistency with other tests and participation in dependencies for other tests.
  input:
    target: country
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing:
    merge_targets: FALSE
DC_validation_countrycode_empty:
  name: validation_countrycode_empty
  meta:
    information:
      description: Check if countryCode exists and is not empty.
      question: Is countryCode information present?
      darwin_core_class: location
      data_quality_dimension: completeness
      dimension: space
      output: validation
      severity:
      warning: incomplete
      resolution:
        record: single_record
      keywords: location,validation,completness,missing,incomplete
      guid: 853b79a2-b314-44a2-ae46-34a1e7ed85e4
    example:
      pass: The value for countryCode is present.
      fail: The value for countryCode is missing.
      input_pass: countryCode=AU
      input_fail: countryCode=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/98
      reference:
      creator:
      creation:
      maintainer: Povilas Gibas
      modification: 2019-10-01
    notes:
  input:
    target: countryCode
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing:
    merge_targets: FALSE
DC_validation_eventtemporal_empty:
  name: validation_eventtemporal_empty
  meta:
    information:
      description: Check if at least one field needed to determine event temporal of the entity exists and is not empty.
      question: Is event temporal information present?
      darwin_core_class: location
      data_quality_dimension: completeness
      dimension: space
      output: validation
      severity:
      warning: incomplete
      resolution:
        record: single_record
        term: multi_term
      keywords: location,validation,completness,missing,incomplete
      guid: 41267642-60ff-4116-90eb-499fee2cd83f
    example:
      pass: The value for at least one term for event temporal is present.
      fail: The value for all terms organized for event temporal are NULL.
      input_pass: year=2000
      input_fail: year=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/88
      reference:
      creator: Lee Belbin
      creation: 
      maintainer: Povilas Gibas
      modification: 2019-10-01
  input:
    target: day, endDayOfYear, eventDate, month, startDayOfYear, verbatimEventDate, year
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing:
    merge_targets: TRUE
DC_validation_eventdate_empty:
  name: validation_eventdate_empty
  meta:
    information:
      description: Check if eventDate exists and is not empty.
      question: Is eventDate information present?
      darwin_core_class: event
      data_quality_dimension: completeness
      dimension: time
      output: validation
      severity:
      warning: incomplete
      resolution:
        record: single_record
      keywords: event,time,validation,completness,missing,incomplete
      guid: f51e15a6-a67d-4729-9c28-3766299d2985
    example:
      pass: The value for eventDate is present.
      fail: The value for eventDate is missing.
      input_pass: eventDate=2001-01-01
      input_fail: eventDate=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/33
      reference:
      creator:
      creation:
      maintainer: Povilas Gibas
      modification: 2019-10-01
    notes:
      1: Paul J. Morris - Noting for cross reference that we previously had a corresponding measure EVENT_DATE_COMPLETENESS 0a59e03f-ebb5-4df3-a802-2e444de525b5.
      2: Arthur Chapman - This test is a prerequisite for amendments #61, #86, #93, #132 - if these amendments are run and fail, then eventDate would still be empty, and thus on the re validation, this test will remain an important test.
  input:
    target: eventDate
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing:
    merge_targets: FALSE
DC_validation_year_empty:
  name: validation_year_empty
  meta:
    information:
      description: Check if year exists and is not empty.
      question: Is year information present?
      darwin_core_class: event
      data_quality_dimension: completeness
      dimension: time
      output: validation
      severity:
      warning: incomplete
      resolution:
        record: single_record
      keywords: event,time,validation,completness,missing,incomplete
      guid: c09ecbf9-34e3-4f3e-b74a-8796af15e59f
    example:
      pass: The value for year is present.
      fail: The value for year is missing.
      input_pass: year=2001-01-01
      input_fail: year=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/49
      reference:
      creator:
      creation:
      maintainer: Povilas Gibas
      modification: 2019-10-01
    notes:
      1: Paula Zermoglio - This would tell us something if the test was run BEFORE interpretation of day, month, year from eventDate (test DATE_FROM_EVENTDATE). It would only make sense if eventDate was null.
  input:
    target: year
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing:
    merge_targets: FALSE
DC_validation_type_empty:
  name: validation_type_empty
  meta:
    information:
      description: Check if type exists and is not empty.
      question: Is type information present?
      darwin_core_class: Record-level Terms
      data_quality_dimension: completeness
      dimension: other
      output: validation
      severity:
      warning: incomplete
      resolution:
        record: single_record
      keywords: other,validation,completness,missing,incomplete
      guid: 374b091a-fc90-4791-91e5-c1557c649169
    example:
      pass: The value for type is present.
      fail: The value for type is missing.
      input_pass: type=Image
      input_fail: type=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/103
      reference: https://www.dublincore.org/specifications/dublin-core/dcmi-type-vocabulary/2002-07-13/
      creator:
      creation:
      maintainer: Povilas Gibas
      modification: 2019-10-01
    notes:
      1: Arthur Chapman - This has been labelled non-core, but discussions at Gainesville suggested it was a good test. We disn't disscuss Sunday TDWG208 - should we re-install or not
      2: Paul J. Morris - One argument for imposing an expectation that dcterms:type (populated with IRIs from DCMI Type Vocabulary) or dc:type (populated with string literals) be non-empty is that this term helps make occurrence data more broadly reusable in other communities. See the table in the TDWG RDF guide:http://rs.tdwg.org/dwc/terms/guides/rdf/index.htm#3.3_Imported_Dublin_Core_terms_that_have_non-literal_objects_and. A second argument (that @ pzermoglio made this evening) is that populating basisOfRecord entails an expectation that dc:type will be popluated with an appropriate parallel value. These are likely to be important discriminators for the nature of vouchers, particularly of observations, where dc:type may contain key information about the nature (image, video, audio) of the voucher. On this basis, I'd advocate including a test for whether dc:type is empty in core.
  input:
    target: type
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing:
    merge_targets: FALSE
DC_validation_license_empty:
  name: validation_license_empty
  meta:
    information:
      description: Check if license exists and is not empty.
      question: Is license information present?
      darwin_core_class: Record-level Terms
      data_quality_dimension: completeness
      dimension: other
      output: validation
      severity:
      warning: incomplete
      resolution:
        record: single_record
      keywords: other,validation,completness,missing,incomplete
      guid: 15f78619-811a-4c6f-997a-a4c7888ad849
    example:
      pass: The value for license is present.
      fail: The value for license is missing.
      input_pass: license=GPL
      input_fail: license=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/99
      reference:
      creator:
      creation:
      maintainer: Povilas Gibas
      modification: 2019-10-01
    notes:
      1: The license at the record level might be derived from the license of the data set from which the record is retrieved
  input:
    target: license
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing:
    merge_targets: FALSE
DC_validation_basisofrecord_empty:
  name: validation_basisofrecord_empty
  meta:
    information:
      description: Check if basisOfRecord exists and is not empty.
      question: Is basisOfRecord information present?
      darwin_core_class: Record-level Terms
      data_quality_dimension: completeness
      dimension: other
      output: validation
      severity:
      warning: incomplete
      resolution:
        record: single_record
      keywords: other,validation,completness,missing,incomplete
      guid: ac2b7648-d5f9-48ca-9b07-8ad5879a2536
    example:
      pass: The value for basisOfRecord is present.
      fail: The value for basisOfRecord is missing.
      input_pass: basisOfRecord=LivingSpecimen
      input_fail: basisOfRecord=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/58
      reference:
      creator:
      creation:
      maintainer: Povilas Gibas
      modification: 2019-10-01
    notes:
      1: John Wieczorek - Agreed at TDWG 2018 DQIG meeting that the test is a Validation and the name TG2-VALIDATION_BASISOFRECORD_EMPTY is satisfactory.
  input:
    target: basisOfRecord
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing:
    merge_targets: FALSE
DC_validation_occurrencestatus_empty:
  name: validation_occurrencestatus_empty
  meta:
    information:
      description: Check if occurrenceStatus exists and is not empty.
      question: Is occurrenceStatus information present?
      darwin_core_class: Record-level Terms
      data_quality_dimension: completeness
      dimension: other
      output: validation
      severity:
      warning: incomplete
      resolution:
        record: single_record
      keywords: other,validation,completness,missing,incomplete
      guid: eb4a17f6-6bea-4cdd-93dd-d5a7e9d1eccf
    example:
      pass: The value for occurrenceStatus is present.
      fail: The value for occurrenceStatus is missing.
      input_pass: occurrenceStatus=present
      input_fail: occurrenceStatus=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/117
      reference:
      creator:
      creation:
      maintainer: Povilas Gibas
      modification: 2019-10-01
    notes:
      1: Lee Belbin - Why did I put NOT_CORE? It seems a simple easy to test and useful FLAG right now. As a VALIDATION, it would also add meaningfully to #135 but it also shapes like a NOTIFICATION as per #58?
      2: Arthur Chapman - I think it was one of those that is empty 90% of the time so would create millions of flags. Thinking back - wasn't there some problem with how people were using occurrenceStatus (i.e. to be more than just Present/Absent? One, I guess, assumes if it is blank, then it is present. Because of this, I think we agreed that it shouldn't be CORE
      3: Lee Belbin - This relates to an existing ALA test of the type we would call NOTIFICATION that says "occurrence status is empty so we are assuming "present". This still seems like a wise thing to me. Yes, it will be flagged a lot, but in this case (as we discussed in Gainesville) - sometimes we need to make a point :) "Please PUT THE OCCURRENCE STATUS IN!"
      4: Arthur Chapman - I believe this is a VALIDATION not a NOTIFICATION. However, because we have #75 I believe we can delete this one altogether as #75 states that if it is EMPTY then replace with "Present". In spite of @Tasilee's argument above - I think just having an Annotation that says something like "basisOfRecord was EMPTY and it has thus been assumed to be Present" I don't believe (especially in interests of keeping it Simple and the number of annotations as few as possible) I think this is redundant and thus NOT CORE
  input:
    target: occurrenceStatus
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing:
    merge_targets: FALSE
DC_validation_occurrenceid_empty:
  name: validation_occurrenceid_empty
  meta:
    information:
      description: Check if occurrenceID exists and is not empty.
      question: Is occurrenceID information present?
      darwin_core_class: Record-level Terms
      data_quality_dimension: completeness
      dimension: other
      output: validation
      severity:
      warning: incomplete
      resolution:
        record: single_record
      keywords: other,validation,completness,missing,incomplete
      guid: c486546c-e6e5-48a7-b286-eba7f5ca56c4
    example:
      pass: The value for occurrenceID is present.
      fail: The value for occurrenceID is missing.
      input_pass: occurrenceID=urn:lsid:nhm.ku.edu:Herps:32
      input_fail: occurrenceID=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/47
      reference:
      creator:
      creation:
      maintainer: Povilas Gibas
      modification: 2019-10-01
    notes:
      1: Lee Belbin - I thought this was against our policy?
      2: John Wieczorek - This has particular applicability for GBIF in publishing an Occurrence data set.
      3: Paul Morris - Important for testing data in pre-aggregation phases, and for assessing data collected by researchers from various sources.
      4: John Wieczorek - I believe the name of this test should be changed. OCCURRENCE_IS_NULL is vague and ambiguous, and does not match names of similar tests. I propose OCCURRENCEID_IS_NULL for consistency.
  input:
    target: occurrenceID
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing:
    merge_targets: FALSE
DC_notification_datageneralizations_notempty:
  name: notification_datageneralizations_notempty
  meta:
    information:
      description: Check if dataGeneralizations is not empty.
      question: Is dataGeneralizations information present?
      darwin_core_class: Record-level Terms
      data_quality_dimension: space,time,name
      dimension: resolution
      output: notification
      severity:
      warning: notification
      resolution:
        record: 
      keywords: notificaton,resolution,space,time,name
      guid: 13d5a10e-188e-40fd-a22c-dbaa87b91df2
    example:
      pass: The value for dataGeneralizations is not empty.
      fail: The value for dataGeneralizations is not reported.
      input_pass: dataGeneralizations=record placed on 0.1 degree grid
      input_fail: dataGeneralizations=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/72
      reference:
      creator:
      creation:
      maintainer: Povilas Gibas
      modification: 2019-11-24
    notes:
      1: This is not specific to spatial data, any value in the dwc:dataGeneralizations field will cause this flag to be raised, but the primary use case is expected to be that dwc:dataGeneralizations demonstrates obfuscated locations.
      2: Paula Zermoglio - Data generalizations can apply to non-geographic data, maybe the description of this test could be changed to match a more general approach, more in line with the name of the test.
      3: Arthur Chapman - Perhaps this needs to be split inter several - e.g. LOCALITY_GENERALIZED, DATE_GENERALIZED, ?NAME_GENERALIZED - does that ever happen?
      4: Arthur Chapman - Maybe someone doesn't want people to know where they were on a particular day? In our data sensitivity document I don't think we considered TIME. But there may be some that don't want it known what days certain animals hatch - turtles on a particular beach, for example. Not sure, but if it is the one tests does it hurt to include?
      5: Arthur Chapman - In this record - the Dimension - should be "Other" and not "Space, Time, Name" - as although it does refer to data generalizations in those three "Dimensions" the actual dwc Element it refers to (dwc:dataGeneralizations falls into the "Other" category. See separate Issue I am posting shortly
      6: Lee Belbin - My feeling is that we are using Dimension as a way of summarising the coverage of the tests, so while the term dwc:dataGeneralizations could be considered agnostic based on http://rs.tdwg.org/dwc/terms/#dataGeneralizations, we agreed to specifically allow this test to cover name, space and time. I find that a more useful strategy - and this is an issue for the Darwin Core Maintenance Group to review.
      7: Lee Belbin - I was wondering if the recent acceptance of dwc:dataGeneralisations to name, time beyond space would benefit from being more explicit? I also seem to remember that we did have a few (non github) issues from Gainesville for DwC? Chasing...
      8: John Wieczorek - Darwin Core does not have these concepts of Dimension, nor is dwc:dataGeneralizations limited to those three data quality concepts. I see the data quality standard as a layer applied on top of Darwin Core (or other standards where the terms are equivalent), and that Darwin Core itself must remain defined independently of that layer.
  input:
    target: dataGeneralizations
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: not_empty
    output_standard_fail: not_reported
    output_standard_missing: not_reported
    merge_targets: FALSE
DC_notification_establishmentmeans_notempty:
  name: notification_establishmentmeans_notempty
  meta:
    information:
      description: Check if establishmentMeans is not empty.
      question: Is establishmentMeans information present?
      darwin_core_class: occurrence
      data_quality_dimension: completness
      dimension: other
      output: notification
      severity:
      warning: notification
      resolution:
        record: 
      keywords: other,notificaton,completness
      guid: acc8dff2-d8d1-483a-946d-65a02a452700
    example:
      pass: The value for establishmentMeans is not empty.
      fail: The value for establishmentMeans is not reported.
      input_pass: establishmentMeans=cultivated
      input_fail: establishmentMeans=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != ""
    source:
      resource: https://github.com/tdwg/bdq/issues/94
      reference:
      creator:
      creation:
      maintainer: Povilas Gibas
      modification: 2019-11-24
    notes:
      1: Arthur Chapman - Wording should be "cultivated or captive" (i.e. Zoo) and these should be flagged as such a (warning) and are not necessarily an error - depends on use.
      2: John Wieczorek - All of this might change as a result of the work of the group interested in proposing Darwin Core changes to deal separately with invasivity.
      3: Arthur Chapman - The way this is interpreted by the Invasive Species people etc. - it refers to the Taxon and not the specimen. You can say that a specimen occurence is not natural (i.e. planted) but this is not how it is usually used
      4: Lee Belbin - This is an important status for evaluating natural-non-natural
      5: Arthur Chapman - But generally, that cannot be determined from the "one" specimen or observation. Can often only be determined through external information at the taxon level
  input:
    target: establishmentMeans
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: not_empty
    output_standard_fail: not_reported
    output_standard_missing: not_reported
    merge_targets: FALSE
DC_validation_occurrenceid_notstandard:
  name: validation_occurrenceid_notstandard
  meta:
    information:
      description: Check if occurrenceID is not empty and follows a format commonly associated with globally unique identifiers (GUID).
      question: Is occurrenceID a GUID?
      darwin_core_class: occurrence
      data_quality_dimension: conformance
      dimension: other
      output: validation
      severity: warning
      warning: invalid
      resolution:
        record: 
      keywords: other,validation,conformance,guid
      guid: 3cfe9ab4-79f8-4afd-8da5-723183ef16a3
    example:
      pass: The value for occurrenceID is guid.
      fail: The value for occurrenceID is not guid.
      input_pass: occurrenceID=9d26b451-9dad-4e27-a6e3-5b7ae332d5ed
      input_fail: occurrenceID=
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != "" & is.guid(TAGET)
    source:
      resource: https://github.com/tdwg/bdq/issues/23
      reference: http://rs.tdwg.org/dwc/terms/guides/rdf/index.htm#1.3.2.1_Persistent_Identifiers
      creator:
      creation:
      maintainer: Povilas Gibas
      modification: 2019-11-24
    notes:
      1: Paul Morris - This one feels like it should assert that the occurrenceID conforms to a well known IRI scheme, and should reference the Darwin Core RDF guide. http://rs.tdwg.org/dwc/terms/guides/rdf/index.htm#1.3.2.1_Persistent_Identifiers I'd support OCCURRENCEID_CONFORMS_TO_WELLKNOWN_IRI_SCHEME. See http://rs.tdwg.org/dwc/terms/guides/rdf/index.htm#1.3.2.1_Persistent_Identifiers
  input:
    target: occurrenceID
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing: internal_prerequisites_not_met
    merge_targets: FALSE
DC_validation_eventdate_outofrange:
  name: validation_eventdate_outofrange
  meta:
    information:
      description: Check if eventDate is not empty and is within given earliest and latest dates.
      question: Is eventDate within given dates?
      darwin_core_class: event
      data_quality_dimension: conformance
      dimension: time
      output: validation
      severity: 
      warning: invalid
      resolution:
        record: 
      keywords: time,validation,conformance
      guid: 3cff4dc4-72e9-4abe-9bf3-8a30f1618432
    example:
      pass: The value for eventDate within given dates.
      fail: The value for eventDate is not within given dates.
      input_pass: eventDate=2001-01-01
      input_fail: eventDate=2230-12-31
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != "" & earlyDate <= TARGET <= lateDate 
    source:
      resource: https://github.com/tdwg/bdq/issues/36
      reference: https://en.wikipedia.org/wiki/ISO_8601
      creator:
      creation:
      maintainer: Povilas Gibas
      modification: 2019-11-24
    notes:
      1: The results of this test are time-dependent A invalid date for tomorrow will be valid tomorrow. This test provides for a default earliest date, which for specimen records should be 1600-01-01 by convention.
  input:
    target: eventDate
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing: internal_prerequisites_not_met
    merge_targets: FALSE
DC_validation_year_outofrange:
  name: validation_year_outofrange
  meta:
    information:
      description: Check if year is not empty and is within given earliest and latest dates.
      question: Is year within given dates?
      darwin_core_class: event
      data_quality_dimension: conformance
      dimension: time
      output: validation
      severity: 
      warning: invalid
      resolution:
        record: 
      keywords: time,validation,conformance
      guid: ad0c8855-de69-4843-a80c-a5387d20fbc8
    example:
      pass: The value for year within given dates.
      fail: The value for year is not within given dates.
      input_pass: year=2000
      input_fail: year=3000
      output_pass: TRUE
      output_fail: FALSE
    pseudocode: |
      !is.na(TARGET) & TARGET != "" & earlyDate <= TARGET <= lateDate 
    source:
      resource: https://github.com/tdwg/bdq/issues/84
      reference: 
      creator:
      creation:
      maintainer: Povilas Gibas
      modification: 2019-11-24
    notes:
      1: The results of this test are time-dependent. Next year is not valid now. Next year it will be. This test provides the option to designate lower and upper limits to the year. The upper limit, if not provided, should default to the year when the test is run. NB By convention, use 1600 as a lower limit for collecting dates of biological specimens.
  input:
    target: year
    dependency:
      dependency_type: internal
      data_checks:
      rpackages:
      data:
  output:
    output_standard_pass: compliant
    output_standard_fail: not_compliant 
    output_standard_missing: internal_prerequisites_not_met
    merge_targets: FALSE
