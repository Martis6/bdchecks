DC_399ef91d-425c-46f2-a6df-8a0fe4c3e86e:
  name: namePublishedYearInFuture
  meta:
    Description:
      IMPLEMENTATION_STATUS: FINISHED
      Main: Check if year in which scientific name was published is not in the future
      InputQuestion: Is publication year not in the future?
      Example:
        Fail: dwc:namePublishedInYear is in the future
        Pass: dwc:namePublishedInYear is valid
        InputFail: namePublishedInYear=2230
        InputPass: namePublishedInYear=2000
        OutputFail: Failed
        OutputPass: Passed
      Resolution:
        Record: SingleRecord
        Term: SingleTerm
      DarwinCoreClass: Taxon
      Keywords: date,record
      guid: 399ef91d-425c-46f2-a6df-8a0fe4c3e86e
    Flags:
      Severity: Warning
      Warnign: Invalid
      Output: Validation
      Dimension: Conformance
    Pseudocode: |
      $namePublishedInYear <= $dateToday
    Source:
      Reference:
      CreatedBy: Povilas Gibas
      MaintainedBy: Povilas Gibas
      CreationDate: 2018-06-23
      ModificationDate: 2018-06-23
      ModificationHist:
  Input:
    Target: namePublishedInYear
    Dependency:
      DependencyType: Internal
      DataChecks:
      Rpackages:
      Data:
  Functionality: |
    FUNC <- function() {
        result <- format(as.Date(TARGET), "%Y") <= format(Sys.Date(), "%Y")
        return(result)
    }
DC_11203926-165d-4b5a-a6c6-55fb0bedfaed:
  name: precisionRangeMismatch
  meta:
    Description:
      IMPLEMENTATION_STATUS: FINISHED
      Main: Check if precision range mismatch is between 0 and 1
      InputQuestion: Is range mismatch between 0 and 1?
      Example:
        Fail: The coordinate precision (dwc:coordinatePrecision), as a decimal representation,
          is outside the range of zero (minimum) and one (maximum)
        Pass: The coordinate precision (dwc:coordinatePrecision) is between zero (minimum)
          and one (maximum)
        InputFail: coordinatePrecision=3,coordinatePrecision=-1
        InputPass: coordinatePrecision=0,coordinatePrecision=0.5,coordinatePrecision=1
        OutputFail: Failed
        OutputPass: Passed
      Resolution:
        Record: SingleRecord
        Term: SingleTerm
      DarwinCoreClass: Location
      Keywords: location,uncertainty,mismatch,decimal
      guid: 11203926-165d-4b5a-a6c6-55fb0bedfaed
    Flags:
      Severity: Warning
      Warnign: Invalid
      Output: Validation
      Dimension: Conformance
    Pseudocode: |
      0 <= $coordinatePrecision <= 1
    Source:
      Reference: 
      CreatedBy: Povilas Gibas
      MaintainedBy: Povilas Gibas
      CreationDate: 2018-06-23
      ModificationDate: 2018-06-23
      ModificationHist: 
  Input:
    Target: coordinatePrecision
    Dependency:
      DependencyType: Internal
      DataChecks: 
      Rpackages:
      Data:
  Functionality: |
    FUNC <- function() {
        result <- TARGET >= 0 & TARGET <= 1
        return(result)
    }
DC_c6adf2ea-3051-4498-97f4-4b2f8a105f57:
  name: uncertaintyRangeMismatch
  meta:
    Description:
      IMPLEMENTATION_STATUS: FINISHED
      Main: Check if geopoint uncertainty range mismatch is a positive integer (meters).
      InputQuestion: Is uncertainty mismatch is an intiger greater than zero?
      Example:
        Fail: Geopoint uncertainty (dwc:coordinateUncertaintyInMeters) should be a
          whole number and greater than zero (meters)
        Pass: Geopoint uncertainty (dwc:coordinateUncertaintyInMeters) is a whole
          number and greater than zero (meters)
        InputFail: coordinateUncertaintyInMeters=0.002,coordinateUncertaintyInMeters=-1,coordinateUncertaintyInMeters=0
        InputPass: coordinateUncertaintyInMeters=1
        OutputFail: Failed
        OutputPass: Passed
      Resolution:
        Record: SingleRecord
        Term: SingleTerm
      DarwinCoreClass: Location
      Keywords: location,uncertainty,mismatch,integer
      guid: c6adf2ea-3051-4498-97f4-4b2f8a105f57
    Flags:
      Severity: Warning
      Warnign: Invalid
      Output: Validation
      Dimension: Conformance
    Pseudocode: |
      is.integer($uncertainty) AND $uncertainty > 0
    Source:
      Reference: 
      CreatedBy: Povilas Gibas
      MaintainedBy: Povilas Gibas
      CreationDate: 2018-06-23
      ModificationDate: 2018-06-23
      ModificationHist: 
  Input:
    Target: coordinateUncertaintyInMeters
    Dependency:
      DependencyType: Internal
      DataChecks: 
      Rpackages:
      Data:
  Functionality: |
    FUNC <- function() {
        result <- TARGET %% 1 == 0 & TARGET > 0
        return(result)
    }
DC_6939b2c7-fd81-4f2d-9282-ff8eeba81301:
  name: individualcountInvalid
  meta:
    Description:
      IMPLEMENTATION_STATUS: FINISHED
      Main: Check if individual count is intiger
      InputQuestion: Is number of individuals a positive integer?
      Example:
        Fail: The count of individuals is not an integer and therefore invalid
        Pass: The count of individuals is a valid integer
        InputFail: individualCount=0.3,individualCount=-1,individualCount=0
        InputPass: individualCount=1
        OutputFail: Failed
        OutputPass: Passed
      Resolution:
        Record: SingleRecord
        Term: SingleTerm
      DarwinCoreClass: Occurrence
      Keywords: count,integer
      guid: 6939b2c7-fd81-4f2d-9282-ff8eeba81301
    Flags:
      Severity: Warning
      Warnign: Invalid
      Output: Validation
      Dimension: Conformance
    Pseudocode: |
      is.integer($individualCount) AND $individualCount > 0
    Source:
      Reference: 
      CreatedBy: Povilas Gibas
      MaintainedBy: Povilas Gibas
      CreationDate: 2018-06-23
      ModificationDate: 2018-06-23
      ModificationHist: 
  Input:
    Target: individualCount
    Dependency:
      DependencyType: Internal
      DataChecks: 
      Rpackages: 
      Data: 
  Functionality: |
    FUNC <- function() {
        result <- TARGET %% 1 == 0 & TARGET >= 0
        return(result)
    }
DC_dc8aae4b-134f-4d75-8a71-c4186239178e:
  name: identifiedDateImprobable
  meta:
    Description:
      IMPLEMENTATION_STATUS: FINISHED
      Main: Check if identification date is between Linnaeus and current date
      InputQuestion: Is identification date possible (between Linnaeus and current date)?
      Example:
        Fail: The date of identification (dwc:dateIdentified) falls prior to Linnaeus
          (1753) or after the current date.
        Pass: The date of identification (dwc:dateIdentified) is post Linnaeus (1753)
          to the current date
        InputFail: dateidentified=1573-02-14,dateidentified=1000-01-01,dateidentified=3000-01-01
        InputPass: dateidentified=2000-01-01
        OutputFail: Failed
        OutputPass: Passed
      Resolution:
        Record: SingleRecord
        Term: SingleTerm
      DarwinCoreClass: Identification
      Keywords: date,event,identification
      guid: dc8aae4b-134f-4d75-8a71-c4186239178e
    Flags:
      Severity: Warning
      Warnign: Invalid
      Output: Validation
      Dimension: Conformance
    Pseudocode: |
      $dateIdentified >= dateLinnaeus AND $dateIdentified <= $dateToday
    Source:
      Reference: 
      CreatedBy: Povilas Gibas
      MaintainedBy: Povilas Gibas
      CreationDate: 2018-06-23
      ModificationDate: 2018-06-23
      ModificationHist: 
  Input:
    Target: dateIdentified
    Dependency:
      DependencyType: Internal
      DataChecks: 
      Rpackages: 
      Data: 
  Functionality: |
    FUNC <- function() {
        TARGETdate <- as.Date(TARGET)
        result <- TARGETdate <= Sys.Date() & TARGETdate >= as.Date("1753-01-01")
        return(result)
    }
DC_48aa7d66-36d1-4662-a503-df170f11b03f:
  name: dayInvalid
  meta:
    Description:
      IMPLEMENTATION_STATUS: FINISHED
      Main: Check if event day is valid (1 <= integer <= 31)
      InputQuestion: Is event day valid?
      Example:
        Fail: The value given for event day is less than 1 or greater than 31
        Pass: The value given for event day is between 1 and 31
        InputFail: day=32,day=0,day=1.1,day=-1
        InputPass: day=1,day=31
        OutputFail: Failed
        OutputPass: Passed
      Resolution:
        Record: SingleRecord
        Term: SingleTerm
      DarwinCoreClass: Event
      Keywords: date,day,event,integer
      guid: 48aa7d66-36d1-4662-a503-df170f11b03f
    Flags:
      Severity: Warning
      Warnign: Invalid
      Output: Validation
      Dimension: Conformance
    Pseudocode: |
      $day >= 1 AND $day <= 31 & is.integer($day)
    Source:
      Reference: 
      CreatedBy: Povilas Gibas
      MaintainedBy: Povilas Gibas
      CreationDate: 2018-06-23
      ModificationDate: 2018-06-23
      ModificationHist: 
  Input:
    Target: day
    Dependency:
      DependencyType: Internal
      DataChecks: 
      Rpackages: 
      Data: 
  Functionality: |
    FUNC <- function() {
        result <- TARGET %% 1 == 0 & TARGET >= 1 & TARGET <= 31
        return(result)
    }
DC_8dd12160-8c22-11e7-bb31-be2e44b06b34:
  name: collectorSequencePossible
  meta:
    Description:
      IMPLEMENTATION_STATUS: STARTED
      Main: Check if distance in space and time between two records is compatible with the available means of transportation at that time
      InputQuestion: Is record collection distance and time is compatible?
      Example:
        Fail: Distance in space and time between two collected items from the same collector are incompatible with the available means of transportation at that time (maximum distance that can be travelled in the period).
        Pass: Distance in space and time between two collected items from the same collector are compatible with the available means of transportation at that time (maximum distance that can be travelled in the period).
        InputFail: Two records collected by the same person before 1850, the first in day X and the next in day X + 1 are more than 1000km apart, which is the maximum distance that people could travel at that time.
        InputPass: Two records collected by the same person before 1850, the first in day X and the next in day X + 1 are at the distance that people could travel at that time.
        OutputFail: Failed
        OutputPass: Passed
      Resolution:
        Record: MultiRecord
        Term: MultiTerm
      DarwinCoreClass: Record_level Terms, Event, Location
      Keywords: distance,date,record,latitute,longitude
      guid: 8dd12160-8c22-11e7-bb31-be2e44b06b34
    Flags:
      Severity: Warning
      Warnign: Invalid
      Output: Validation
      Dimension: Conformance
    Pseudocode: ''
    Source:
      Reference: 
      CreatedBy: Povilas Gibas
      MaintainedBy: Povilas Gibas
      CreationDate: 2018-06-23
      ModificationDate: 2018-06-23
      ModificationHist: 
  Input:
    Target: recordedBy,eventDate,decimalLatitude,decimalLongitude
    Dependency:
      DependencyType: Internal
      DataChecks: 
      Rpackages: 
      Data: 
  Functionality: ''
DC_7720f2c8-72b3-48b4-972c-9b30fd6aab6c:
  name: dateIdentifiedInFuture
  meta:
    Description:
      IMPLEMENTATION_STATUS: FINISHED
      Main: Check if record identification date is not in the future
      InputQuestion: Is record identified in the past?
      Example:
        Fail: Date (dwc:dateIdentified) is in the future
        Pass: Date (dwc:dateIdentified) is not in the future
        InputFail: dateIdentified > TODAY
        InputPass: dateIdentified <= TODAY
        OutputFail: Failed
        OutputPass: Passed
      Resolution:
        Record: SingleRecord
        Term: SingleTerm
      DarwinCoreClass: Identification
      Keywords: date
      guid: 7720f2c8-72b3-48b4-972c-9b30fd6aab6c
    Flags:
      Severity: Warning
      Warnign: Invalid
      Output: Validation
      Dimension: Conformance
    Pseudocode: |
      $RecordDate <= $TodayDate
    Source:
      Reference: 
      CreatedBy: Povilas Gibas
      MaintainedBy: Povilas Gibas
      CreationDate: 2018-06-23
      ModificationDate: 2018-06-23
      ModificationHist: 
  Input:
    Target: dateIdentified
    Dependency:
      DependencyType: Internal
      DataChecks: 
      Rpackages: 
      Data: 
  Functionality: |
    FUNC <- function() {
        result <- as.Date(TARGET) <= Sys.Date()
        return(result)
    }
